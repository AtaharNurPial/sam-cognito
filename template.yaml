AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Practicing Cognito user pool

Parameters:
  AppName:
    Type: String
    Description: Name of the application
  ClientDomains:
    Type: CommaDelimitedList
    Description: List of domains
  UserEmail:
    Type: String
    Description: Admin email address

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName}-UserPool
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub ${AppName}-UserPoolClient
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs: !Ref ClientDomains
      LogoutURLs: !Ref ClientDomains
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - code
        - implicit
        # - client_credentials
      AllowedOAuthScopes:
        - email
        - openid
        - profile

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Sub ${AppName}-${AWS::AccountId}
      UserPoolId: !Ref UserPool

  UserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties: 
      GroupName: Users
      Description: User Group
      Precedence: 0
      UserPoolId: !Ref UserPool
  
  SignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 5
      Handler: sign_up.lambda_handler
      Runtime: python3.8
      CodeUri: src/
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PreSignUp
            UserPool: !Ref UserPool
        SignUp:
          Type: Api
          Properties:
            Path:  /signup
            Method: post

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 5
      Handler: log_in.lambda_handler
      Runtime: python3.8
      CodeUri: src/
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PreAuthentication
            UserPool: !Ref UserPool
        Login:
          Type: Api
          Properties:
            Path:  /login
            Method: post

  ValidateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 5
      Handler: validate.lambda_handler
      Runtime: python3.8
      CodeUri: src/
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PostConfirmation
            # Trigger: PreAuthentication
            UserPool: !Ref UserPool
        ConfirmSignUp:
          Type: Api
          Properties:
            Path:  /signup/{confirm_code}
            Method: post

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      Timeout: 5
      Handler: auth.lambda_handler
      Runtime: python3.8
      CodeUri: src/
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PostAuthentication
            UserPool: !Ref UserPool

Outputs:
  UserPoolId:
    Description: "User pool ID"
    Value: !Ref UserPool
    Export:
      Name: !Sub ${AppName}:UserPoolId

  UserPoolClientId:
    Description: "Application client ID"
    Value: !Ref UserPoolClient

  AuthUrl:
    Description: "URL used for authentication"
    Value: !Sub https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com

  SignupFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for Signup function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/signup/"

  LoginFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for Login function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/login/"
  
  ValidateFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for Validate function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/signup/{confirm_code}"
